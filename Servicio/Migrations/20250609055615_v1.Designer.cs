// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Servicio.Data;

#nullable disable

namespace Servicio.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250609055615_v1")]
    partial class v1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entidades.Models.Ciudadano", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DNI")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Materno")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Paterno")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Ciudadanos");
                });

            modelBuilder.Entity("Entidades.Models.Grado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Abreviatura")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Grados");
                });

            modelBuilder.Entity("Entidades.Models.Incidente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CiudadanoId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<double>("Latitud")
                        .HasColumnType("float");

                    b.Property<double>("Longitud")
                        .HasColumnType("float");

                    b.Property<int>("TipoIncidenteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CiudadanoId");

                    b.HasIndex("TipoIncidenteId");

                    b.ToTable("Incidentes");
                });

            modelBuilder.Entity("Entidades.Models.Intervencion", b =>
                {
                    b.Property<int>("IntervencionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IntervencionId"));

                    b.Property<int>("CIP")
                        .HasColumnType("int");

                    b.Property<string>("Detalle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IncidenteId")
                        .HasColumnType("int");

                    b.HasKey("IntervencionId");

                    b.HasIndex("CIP");

                    b.HasIndex("IncidenteId");

                    b.ToTable("Intervenciones");
                });

            modelBuilder.Entity("Entidades.Models.Policia", b =>
                {
                    b.Property<int>("CIP")
                        .HasColumnType("int");

                    b.Property<string>("Comisaria")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("DNI")
                        .HasColumnType("int");

                    b.Property<int>("GradoId")
                        .HasColumnType("int");

                    b.Property<string>("Materno")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Paterno")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CIP");

                    b.HasIndex("GradoId");

                    b.ToTable("Policias");
                });

            modelBuilder.Entity("Entidades.Models.TipoIncidente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TiposIncidente");
                });

            modelBuilder.Entity("Entidades.Models.Incidente", b =>
                {
                    b.HasOne("Entidades.Models.Ciudadano", "Ciudadano")
                        .WithMany("Incidentes")
                        .HasForeignKey("CiudadanoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entidades.Models.TipoIncidente", "TipoIncidente")
                        .WithMany("Incidentes")
                        .HasForeignKey("TipoIncidenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudadano");

                    b.Navigation("TipoIncidente");
                });

            modelBuilder.Entity("Entidades.Models.Intervencion", b =>
                {
                    b.HasOne("Entidades.Models.Policia", "Policia")
                        .WithMany("Intervenciones")
                        .HasForeignKey("CIP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entidades.Models.Incidente", "Incidente")
                        .WithMany("Intervenciones")
                        .HasForeignKey("IncidenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Incidente");

                    b.Navigation("Policia");
                });

            modelBuilder.Entity("Entidades.Models.Policia", b =>
                {
                    b.HasOne("Entidades.Models.Grado", "Grado")
                        .WithMany()
                        .HasForeignKey("GradoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grado");
                });

            modelBuilder.Entity("Entidades.Models.Ciudadano", b =>
                {
                    b.Navigation("Incidentes");
                });

            modelBuilder.Entity("Entidades.Models.Incidente", b =>
                {
                    b.Navigation("Intervenciones");
                });

            modelBuilder.Entity("Entidades.Models.Policia", b =>
                {
                    b.Navigation("Intervenciones");
                });

            modelBuilder.Entity("Entidades.Models.TipoIncidente", b =>
                {
                    b.Navigation("Incidentes");
                });
#pragma warning restore 612, 618
        }
    }
}
